#!/bin/bash

TEMP=$(getopt --options 'h' --long 'help,debug' --name 'initserv' -- "$@")

if [ $? -ne 0 ]; then
    echo 'Incorrect usage' >&2
    exit 1
fi

eval set -- "$TEMP"
unset TEMP

while true; do
    case "$1" in
    '-h' | '--help')
        echo 'TODO help'
        shift
        continue
        ;;
    '--debug')
        DEBUG="ON"
        shift
        continue
        ;;
    '--')
        shift
        break
        ;;
    *)
        echo 'Internal error!' >&2
        exit 1
        ;;
    esac
done

debug() {
    if [[ $DEBUG == "ON" ]]; then
        echo "debug: $1"
    fi
}

error() {
    echo "$(tput setaf 1)error: $1$(tput sgr 0)"
}

declare -A REACHED_TARGETS

target() {
    local TARGET_FILE="targets/$1"
    if [[ ! -r "$TARGET_FILE" ]]; then
        error "Target $1 does not exists"
        return 1
    fi

    if [[ ${REACHED_TARGETS[$1]} == "YES" ]]; then
        debug "Target $1 already reached. skipping"
        return 0
    fi

    if [[ -v CURRENT_TARGET ]]; then
        debug "Started target $1, required by $CURRENT_TARGET"
    else
        debug "Started target $1"
    fi

    local CURRENT_TARGET="$1"
    . "$TARGET_FILE" || {
        RET=$?
        debug "Target $1 failed"
        return $RET
    }
    debug "Reached target $1"
    REACHED_TARGETS[$1]="YES"
}

required-target() {
    target "$@" || {
        RET=$?
        error "Target $1 failed but required by $CURRENT_TARGET, exiting"
        return $RET
    }
}

for t; do
    target "$t"
done

if [[ $# -eq 0 ]]; then
    target "default"
fi
